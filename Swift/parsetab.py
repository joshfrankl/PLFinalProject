
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7B092674C823E376DE8B86EAC5A5C750'
    
_lr_action_items = {'PRINT':([0,2,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,27,30,62,63,64,70,71,72,73,74,75,76,77,78,79,80,84,85,87,88,89,90,91,92,93,94,97,98,99,],[1,-6,1,-35,-55,-29,-2,-45,-59,-49,-31,-56,-39,-4,-60,-8,-5,-7,-58,-61,-57,-54,-3,-59,-32,-9,-36,-30,-46,-14,-17,-18,-16,-15,-50,1,-21,-66,-40,-13,-10,-12,-11,-19,1,-24,-22,-20,-25,-23,]),'OR_OP':([6,7,8,10,11,12,14,15,16,18,22,24,25,27,62,63,70,72,78,84,85,],[-35,-55,34,-45,-59,-49,-31,-56,-39,-60,-58,-61,-57,-54,-59,-32,-36,-46,-50,-66,-40,]),'NE_OP':([6,7,10,11,12,15,16,18,22,24,25,27,48,50,52,53,54,62,72,78,84,85,],[32,-55,-45,-59,-49,-56,-39,-60,-58,-61,-57,-54,32,-64,-63,-65,-62,-59,-46,-50,-66,-40,]),'VAR':([0,2,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,27,30,62,63,64,70,71,72,73,74,75,76,77,78,79,80,84,85,87,88,89,90,91,92,93,94,97,98,99,],[3,-6,3,-35,-55,-29,-2,-45,-59,-49,-31,-56,-39,-4,-60,-8,-5,-7,-58,-61,-57,-54,-3,-59,-32,-9,-36,-30,-46,-14,-17,-18,-16,-15,-50,3,-21,-66,-40,-13,-10,-12,-11,-19,3,-24,-22,-20,-25,-23,]),'MINUS':([7,10,11,12,15,18,22,24,25,27,62,78,84,],[-55,36,-59,-49,-56,-60,-58,-61,-57,-54,-59,-50,-66,]),'MULT':([7,11,12,15,18,22,24,25,27,62,84,],[-55,-59,46,-56,-60,-58,-61,-57,-54,-59,-66,]),'ELSE':([80,98,],[95,-25,]),'IDENTIFIER':([0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,56,57,58,59,60,62,63,64,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,99,],[11,-6,29,11,-35,-55,-29,-2,-45,-59,-49,52,-31,-56,-39,-4,-60,-8,-5,-7,-58,61,-61,-57,62,-54,66,-3,62,-38,-37,62,62,-48,-47,62,62,62,62,62,-53,-52,62,-51,-43,-42,-44,62,-41,-59,-32,-9,62,-36,-30,-46,-14,-17,-18,-16,-15,-50,11,-21,52,-33,-34,-66,-40,62,-13,-10,-12,-11,-19,11,-24,-22,-20,-25,-23,]),'IF':([0,2,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,27,30,62,63,64,70,71,72,73,74,75,76,77,78,79,80,84,85,87,88,89,90,91,92,93,94,97,98,99,],[13,-6,13,-35,-55,-29,-2,-45,-59,-49,-31,-56,-39,-4,-60,-8,-5,-7,-58,-61,-57,-54,-3,-59,-32,-9,-36,-30,-46,-14,-17,-18,-16,-15,-50,13,13,-66,-40,-13,-10,-12,-11,-19,13,-24,-22,-20,-25,-23,]),'RCURLY':([2,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,27,30,62,63,64,70,71,72,73,74,75,76,77,78,80,84,85,87,88,89,90,91,92,93,94,97,98,99,],[-6,-35,-55,-29,-2,-45,-59,-49,-31,-56,-39,-4,-60,-8,-5,-7,-58,-61,-57,-54,-3,-59,-32,-9,-36,-30,-46,-14,-17,-18,-16,-15,-50,-21,-66,-40,-13,-10,-12,-11,-19,98,-24,-22,-20,-25,-23,]),'INTEGER':([0,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,55,56,57,58,59,60,62,63,64,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,99,],[15,-6,15,-35,-55,-29,-2,-45,-59,-49,54,-31,-56,-39,-4,-60,-8,-5,-7,-58,-61,-57,15,-54,68,-3,15,-38,-37,15,15,-48,-47,15,15,15,15,15,-53,-52,15,-51,84,-43,-42,-44,15,-41,-59,-32,-9,15,-36,-30,-46,-14,-17,-18,-16,-15,-50,15,-21,54,-33,-34,-66,-40,15,-13,-10,-12,-11,-19,15,-24,-22,-20,-25,-23,]),'MOD':([7,11,12,15,18,22,24,25,27,62,84,],[-55,-59,43,-56,-60,-58,-61,-57,-54,-59,-66,]),'GT_OP':([7,10,11,12,15,16,18,22,24,25,27,48,50,52,53,54,62,72,78,84,],[-55,-45,-59,-49,-56,56,-60,-58,-61,-57,-54,56,-64,-63,-65,-62,-59,-46,-50,-66,]),'EQUALS':([11,29,61,],[38,69,86,]),'$end':([2,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,27,30,62,63,64,70,71,72,73,74,75,76,77,78,80,84,85,87,88,89,90,91,93,94,97,98,99,],[-6,-1,0,-35,-55,-29,-2,-45,-59,-49,-31,-56,-39,-4,-60,-8,-5,-7,-58,-61,-57,-54,-3,-59,-32,-9,-36,-30,-46,-14,-17,-18,-16,-15,-50,-21,-66,-40,-13,-10,-12,-11,-19,-24,-22,-20,-25,-23,]),'EQ_OP':([6,7,10,11,12,15,16,18,22,24,25,27,48,50,52,53,54,62,72,78,84,85,],[33,-55,-45,-59,-49,-56,-39,-60,-58,-61,-57,-54,33,-64,-63,-65,-62,-59,-46,-50,-66,-40,]),'LPAREN':([1,],[28,]),'LE_OP':([7,10,11,12,15,16,18,22,24,25,27,48,50,52,53,54,62,72,78,84,],[-55,-45,-59,-49,-56,57,-60,-58,-61,-57,-54,57,-64,-63,-65,-62,-59,-46,-50,-66,]),'TRUE':([0,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,56,57,58,59,60,62,63,64,69,70,71,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,92,93,94,97,98,99,],[18,-6,18,-35,-55,-29,-2,-45,-59,-49,49,-31,-56,-39,-4,-60,-8,-5,-7,-58,-61,-57,18,-54,-3,18,-38,-37,18,18,-48,-47,18,18,18,18,18,-53,-52,18,-51,-43,-42,-44,18,-41,-59,-32,-9,18,-36,-30,-46,-14,-17,-18,-16,-15,-50,18,-21,-66,-40,18,-13,-10,-12,-11,-19,18,-24,-22,-20,-25,-23,]),'LCURLY':([47,49,50,51,52,53,54,84,95,96,],[79,-27,-64,-28,-63,-65,-62,-66,79,-26,]),'GE_OP':([7,10,11,12,15,16,18,22,24,25,27,48,50,52,53,54,62,72,78,84,],[-55,-45,-59,-49,-56,58,-60,-58,-61,-57,-54,58,-64,-63,-65,-62,-59,-46,-50,-66,]),'RPAREN':([28,65,66,67,68,84,],[64,87,88,89,90,-66,]),'LT_OP':([7,10,11,12,15,16,18,22,24,25,27,48,50,52,53,54,62,72,78,84,],[-55,-45,-59,-49,-56,60,-60,-58,-61,-57,-54,60,-64,-63,-65,-62,-59,-46,-50,-66,]),'.':([15,54,68,],[55,55,55,]),'DIV':([7,11,12,15,18,22,24,25,27,62,84,],[-55,-59,44,-56,-60,-58,-61,-57,-54,-59,-66,]),'MUEQ':([11,],[39,]),'DEQ':([11,],[40,]),'MEQ':([11,],[41,]),'STRING':([0,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,56,57,58,59,60,62,63,64,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,99,],[22,-6,22,-35,-55,-29,-2,-45,-59,-49,50,-31,-56,-39,-4,-60,-8,-5,-7,-58,-61,-57,22,-54,65,-3,22,-38,-37,22,22,-48,-47,22,22,22,22,22,-53,-52,22,-51,-43,-42,-44,22,-41,-59,-32,-9,22,-36,-30,-46,-14,-17,-18,-16,-15,-50,22,-21,50,-33,-34,-66,-40,22,-13,-10,-12,-11,-19,22,-24,-22,-20,-25,-23,]),'LET':([0,2,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,27,30,62,63,64,70,71,72,73,74,75,76,77,78,79,80,84,85,87,88,89,90,91,92,93,94,97,98,99,],[23,-6,23,-35,-55,-29,-2,-45,-59,-49,-31,-56,-39,-4,-60,-8,-5,-7,-58,-61,-57,-54,-3,-59,-32,-9,-36,-30,-46,-14,-17,-18,-16,-15,-50,23,-21,-66,-40,-13,-10,-12,-11,-19,23,-24,-22,-20,-25,-23,]),'FALSE':([0,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,56,57,58,59,60,62,63,64,69,70,71,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,92,93,94,97,98,99,],[24,-6,24,-35,-55,-29,-2,-45,-59,-49,51,-31,-56,-39,-4,-60,-8,-5,-7,-58,-61,-57,24,-54,-3,24,-38,-37,24,24,-48,-47,24,24,24,24,24,-53,-52,24,-51,-43,-42,-44,24,-41,-59,-32,-9,24,-36,-30,-46,-14,-17,-18,-16,-15,-50,24,-21,-66,-40,24,-13,-10,-12,-11,-19,24,-24,-22,-20,-25,-23,]),'PEQ':([11,],[42,]),'AND_OP':([0,2,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,27,30,34,38,39,40,41,42,62,63,64,69,70,71,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,92,93,94,97,98,99,],[26,-6,26,-35,-55,-29,-2,-45,-59,-49,-31,-56,-39,-4,-60,-8,-5,-7,-58,-61,-57,-54,-3,26,26,26,26,26,26,-59,-32,-9,26,-36,-30,-46,-14,-17,-18,-16,-15,-50,26,-21,-66,-40,26,-13,-10,-12,-11,-19,26,-24,-22,-20,-25,-23,]),'PLUS':([7,10,11,12,15,18,22,24,25,27,62,78,84,],[-55,37,-59,-49,-56,-60,-58,-61,-57,-54,-59,-50,-66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'boolOP':([48,],[81,]),'variableReassignment':([0,4,79,92,],[2,2,2,2,]),'addOP':([10,],[35,]),'statements':([0,79,],[4,92,]),'program':([0,],[5,]),'relOP':([16,48,],[59,83,]),'literal':([0,4,26,31,34,35,38,39,40,41,42,45,59,69,79,86,92,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'relation':([0,4,26,31,34,38,39,40,41,42,59,69,79,86,92,],[6,6,6,6,6,6,6,6,6,6,85,6,6,6,6,]),'conjunction':([0,4,34,38,39,40,41,42,69,79,86,92,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'mulOP':([12,],[45,]),'codeBlock':([47,95,],[80,99,]),'statement':([0,4,79,92,],[9,30,9,30,]),'term':([0,4,26,31,34,35,38,39,40,41,42,45,59,69,79,86,92,],[10,10,10,10,10,10,10,10,10,10,10,78,10,10,10,10,10,]),'factor':([0,4,26,31,34,35,38,39,40,41,42,45,59,69,79,86,92,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'equality':([0,4,26,31,34,38,39,40,41,42,69,79,86,92,],[14,14,63,70,14,14,14,14,14,14,14,14,14,14,]),'addition':([0,4,26,31,34,35,38,39,40,41,42,59,69,79,86,92,],[16,16,16,16,16,72,16,16,16,16,16,16,16,16,16,16,]),'conditionalStatement':([13,],[47,]),'eqOP':([6,48,],[31,82,]),'item':([13,81,],[48,96,]),'expression':([0,4,34,38,39,40,41,42,69,79,86,92,],[17,17,71,73,74,75,76,77,91,17,97,17,]),'ifStatement':([0,4,79,80,92,],[19,19,19,93,19,]),'variableDeclaration':([0,4,79,92,],[20,20,20,20,]),'print':([0,4,79,92,],[21,21,21,21,]),'elseStatement':([80,],[94,]),'decimal':([0,4,13,26,28,31,34,35,38,39,40,41,42,45,59,69,79,81,86,92,],[25,25,53,25,67,25,25,25,25,25,25,25,25,25,25,25,25,53,25,25,]),'primary':([0,4,26,31,34,35,38,39,40,41,42,45,59,69,79,86,92,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','yacc.py',9),
  ('statements -> statement','statements',1,'p_statements','yacc.py',14),
  ('statements -> statements statement','statements',2,'p_statements','yacc.py',15),
  ('statement -> expression','statement',1,'p_statement','yacc.py',23),
  ('statement -> variableDeclaration','statement',1,'p_statement','yacc.py',24),
  ('statement -> variableReassignment','statement',1,'p_statement','yacc.py',25),
  ('statement -> print','statement',1,'p_statement','yacc.py',26),
  ('statement -> ifStatement','statement',1,'p_statement','yacc.py',27),
  ('print -> PRINT LPAREN RPAREN','print',3,'p_print','yacc.py',32),
  ('print -> PRINT LPAREN IDENTIFIER RPAREN','print',4,'p_print','yacc.py',33),
  ('print -> PRINT LPAREN INTEGER RPAREN','print',4,'p_print','yacc.py',34),
  ('print -> PRINT LPAREN decimal RPAREN','print',4,'p_print','yacc.py',35),
  ('print -> PRINT LPAREN STRING RPAREN','print',4,'p_print','yacc.py',36),
  ('variableReassignment -> IDENTIFIER EQUALS expression','variableReassignment',3,'p_variableReassignment','yacc.py',44),
  ('variableReassignment -> IDENTIFIER PEQ expression','variableReassignment',3,'p_variableReassignment','yacc.py',45),
  ('variableReassignment -> IDENTIFIER MEQ expression','variableReassignment',3,'p_variableReassignment','yacc.py',46),
  ('variableReassignment -> IDENTIFIER MUEQ expression','variableReassignment',3,'p_variableReassignment','yacc.py',47),
  ('variableReassignment -> IDENTIFIER DEQ expression','variableReassignment',3,'p_variableReassignment','yacc.py',48),
  ('variableDeclaration -> VAR IDENTIFIER EQUALS expression','variableDeclaration',4,'p_variableDeclaration','yacc.py',53),
  ('variableDeclaration -> LET IDENTIFIER EQUALS expression','variableDeclaration',4,'p_variableDeclaration','yacc.py',54),
  ('ifStatement -> IF conditionalStatement codeBlock','ifStatement',3,'p_ifStatement','yacc.py',59),
  ('ifStatement -> IF conditionalStatement codeBlock elseStatement','ifStatement',4,'p_ifStatement','yacc.py',60),
  ('elseStatement -> ELSE codeBlock','elseStatement',2,'p_elseStatement','yacc.py',68),
  ('elseStatement -> ifStatement','elseStatement',1,'p_elseStatement','yacc.py',69),
  ('codeBlock -> LCURLY statements RCURLY','codeBlock',3,'p_codeBlock','yacc.py',77),
  ('conditionalStatement -> item boolOP item','conditionalStatement',3,'p_conditionalStatement','yacc.py',82),
  ('conditionalStatement -> TRUE','conditionalStatement',1,'p_conditionalStatement','yacc.py',83),
  ('conditionalStatement -> FALSE','conditionalStatement',1,'p_conditionalStatement','yacc.py',84),
  ('expression -> conjunction','expression',1,'p_expression','yacc.py',92),
  ('expression -> conjunction OR_OP expression','expression',3,'p_expression','yacc.py',93),
  ('conjunction -> equality','conjunction',1,'p_conjunction','yacc.py',98),
  ('conjunction -> AND_OP equality','conjunction',2,'p_conjunction','yacc.py',99),
  ('boolOP -> eqOP','boolOP',1,'p_boolOP','yacc.py',107),
  ('boolOP -> relOP','boolOP',1,'p_boolOP','yacc.py',108),
  ('equality -> relation','equality',1,'p_equality','yacc.py',113),
  ('equality -> relation eqOP equality','equality',3,'p_equality','yacc.py',114),
  ('eqOP -> EQ_OP','eqOP',1,'p_eqOP','yacc.py',122),
  ('eqOP -> NE_OP','eqOP',1,'p_eqOP','yacc.py',123),
  ('relation -> addition','relation',1,'p_relation','yacc.py',128),
  ('relation -> addition relOP relation','relation',3,'p_relation','yacc.py',129),
  ('relOP -> LT_OP','relOP',1,'p_relOP','yacc.py',137),
  ('relOP -> LE_OP','relOP',1,'p_relOP','yacc.py',138),
  ('relOP -> GT_OP','relOP',1,'p_relOP','yacc.py',139),
  ('relOP -> GE_OP','relOP',1,'p_relOP','yacc.py',140),
  ('addition -> term','addition',1,'p_addition','yacc.py',145),
  ('addition -> term addOP addition','addition',3,'p_addition','yacc.py',146),
  ('addOP -> PLUS','addOP',1,'p_addOP','yacc.py',154),
  ('addOP -> MINUS','addOP',1,'p_addOP','yacc.py',155),
  ('term -> factor','term',1,'p_term','yacc.py',160),
  ('term -> factor mulOP term','term',3,'p_term','yacc.py',161),
  ('mulOP -> MULT','mulOP',1,'p_mulOP','yacc.py',169),
  ('mulOP -> DIV','mulOP',1,'p_mulOP','yacc.py',170),
  ('mulOP -> MOD','mulOP',1,'p_mulOP','yacc.py',171),
  ('factor -> primary','factor',1,'p_factor','yacc.py',176),
  ('primary -> literal','primary',1,'p_primary','yacc.py',184),
  ('literal -> INTEGER','literal',1,'p_literal','yacc.py',189),
  ('literal -> decimal','literal',1,'p_literal','yacc.py',190),
  ('literal -> STRING','literal',1,'p_literal','yacc.py',191),
  ('literal -> IDENTIFIER','literal',1,'p_literal','yacc.py',192),
  ('literal -> TRUE','literal',1,'p_literal','yacc.py',193),
  ('literal -> FALSE','literal',1,'p_literal','yacc.py',194),
  ('item -> INTEGER','item',1,'p_item','yacc.py',199),
  ('item -> IDENTIFIER','item',1,'p_item','yacc.py',200),
  ('item -> STRING','item',1,'p_item','yacc.py',201),
  ('item -> decimal','item',1,'p_item','yacc.py',202),
  ('decimal -> INTEGER . INTEGER','decimal',3,'p_decimal','yacc.py',207),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',213),
]
